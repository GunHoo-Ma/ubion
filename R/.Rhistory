summarise(평균연비 = mean(고속도로, na.rm = T))
mpg %>%
group_by(구동방식) %>%
summarise(평균연비 = mean(고속도로, na.rm = T)) -> mpg$평균연비
summarise(평균연비 = mean(고속도로, na.rm = T)
mpg %>%
ggplot(
data - group_data,
ase(
x = 구동방식,
y = 평균연비
)
) + geom_col()
ggplot(
data - group_data,
ase(
x = 구동방식,
y = 평균연비
)
) + geom_col()
mpg %>%
group_by(구동방식) %>%
summarise(평균연비 = mean(고속도로, na.rm = T)
mpg %>%
mpg
ggplot(
data = mpg,
ase(
x = 구동방식
)
) + geom_bar
ggplot(
data = mpg,
aes(
x = 구동방식
)
) + geom_bar
ggplot(
data = mpg,
aes(
x = 구동방식
)
) + geom_bar()
ggplot(
data = mpg,
aes(
x = 구동방식
)
) + geom_bar()
mpg %>%
group_by(구동방식) %>%
summarise(평균연비 = mean(고속도로, na.rm = T)
mpg
mpg
View(mpg)
mpg %>%
group_by(구동방식) %>%
summarise(평균연비 = mean(고속도로, na.rm = T) -> mpg
View(mpg)
View(mpg)
ggplot(
data - group_data,
ase(
x = 구동방식,
y = 평균연비
)
) + geom_col()
ggplot(
data = group_data,
ase(
x = 구동방식,
y = 평균연비
)
) + geom_col()
ggplot(
data = mpg,
aes(
x = 구동방식
)
) + geom_bar()
ggplot(
data = mpg,
aes(
x = 구동방식
)
) + geom_bar()
#제조년도별 생산 차량의 개수 라인 그래프
table(mpg$year)
mpg$구동방식
mpg$평균연비
mpg %>%  group_by(year) %>%
summarise(count = n())
mpg %>%
group_by(구동방식) %>%
summarise(평균연비 = mean(고속도로, na.rm = T) -> group_data
ggplot(
mpg %>%
group_by(구동방식) %>%
summarise(평균연비 = mean(고속도로, na.rm = T) -> group_data
group_data
mpg %>%  group_by(year) %>%
summarise(count = n()) -> group_data2
ggplot(
data = mpg,
ase(
x = 구동방식,
y = 평균연비
)
) + geom_col()
ggplot(
data = group_data2,
aes(
x = year,
y = count
)
) + geom_line()
ggplot(
data = mpg,
aes(
x = 구동방식,
y = 평균연비
)
) + geom_col(
ggplot(
data = mpg,
aes(
x = 구동방식,
y = 평균연비
)
) + geom_col()
ggplot(
ggplot(
data = group_data2,
aes(
x = year,
y = count
)
) + geom_line()
ggplot(
data = economics,
aes(
x = date,
y = umemploy
)
) + geom_line()
ggplot(
data = economics,
aes(
x = date,
y = unemploy
)
) + geom_line()
View(economics)
mpg <- ggplot2::mpg
boxplot(mpg$hwy)
ggplot(
data = mpg,
aes(
x = drv,
y = hwy
)
) + geom_boxplot()
mpg$평균연비
group_data
ggplot(
data = mpg,
aes(
x = 구동방식,
y = 평균연비
)
) + geom_col()
ggplot(
data = mpg,
aes(
x = drv,
y = hwy
)
) + geom_boxplot()
mpg %>%
rename('제조사' = manufacturer,
'고속도로' = hwy,
'시내' = cty,
'차종' = class ,
'구동방식' = drv) -> mpg
mpg %>%
group_by(구동방식) %>%
summarise(평균연비 = mean(고속도로, na.rm = T) -> group_data
group_data
ggplot(
data = mpg,
aes(
x = drv,
y = hwy
)
) + geom_boxplot()
mpg <- ggplot2::mpg
boxplot(mpg$hwy)
ggplot(
data = mpg,
aes(
x = drv,
y = hwy
)
) + geom_boxplot()
#sav 파일을 로드
#foreign 라이브러리 설치
install.packages('foreign')
library(foreign)
read.spss('../Koweps/Koweps.sav')
read.spss("../Koweps/Koweps.sav", to.data.frame = T) -> welfare
welfare
str(welfare)
View(welfare)
welfare %>%
rename(
gender = h10_g3,
birth = h10_g4,
income = p1002_8aq1,
code_job = h10_eco9
)
welfare %>%
rename(
gender = h10_g3,
birth = h10_g4,
income = p1002_8aq1,
code_job = h10_eco9
) -> welfare
welfare_copy <- welfare[c('gender','birth','income','code_job')]
welfare_copy
##결측치를 확인
table(welfare_copy)
##결측치를 확인
table(is.na(welfare_copy))
table(is.na(welfare_copy$gender))
table(is.na(welfare_copy$birth))
table(is.na(welfare_copy$income))
table(is.na(welfare_copy$code_job))
table(welfare_copy$gender)
ifelse(welfare_copy$gender == 1, 'male','female') -> welfare_copy$gender
welfare_copy
table(welfare_copy$income)
##incomde 컬럼의 데이터가 0,9999  라면 NA 변환
## case1 income 0보다 커고 9999보다 작은 경우
welfare_copy$income > 0 & welfare_copy$income <9999 -> flag
ifelse(flage,welfare_copy$income, NA)
ifelse(flag,welfare_copy$income, NA)
## case2 income이 0이거나 9999라면
flag2 <- welfare_copy$income == 0 | welfare_copy$income == 9999
ifelse(
flag,
NA,
welfare_copy$income
)
ifelse(
flag2,
NA,
welfare_copy$income
)
## case3 income이 (0,9999)안에 포함되어 있으면
flag3<- welfare_copy$income %in% c(0,9999)
ifelse(flag3,NA,welfare_copy$income)
ifelse(flag3,NA,welfare_copy$income) ->welfare_copy$income
#filter() : income이 결측치인 데이터를 제거
#select() : gender,income 컬럼만 따로 추출
#group_by() : gender를 기준으로 그룹화
#summari() : income의 평균 값을 그룹 연산
welfare_copy %>%
filter(!is.na(income))
#filter() : income이 결측치인 데이터를 제거
#select() : gender,income 컬럼만 따로 추출
#group_by() : gender를 기준으로 그룹화
#summari() : income의 평균 값을 그룹 연산
welfare_copy %>%
filter(!is.na(income)) %>%
select(gender,income)
#filter() : income이 결측치인 데이터를 제거
#select() : gender,income 컬럼만 따로 추출
#group_by() : gender를 기준으로 그룹화
#summari() : income의 평균 값을 그룹 연산
welfare_copy %>%
filter(!is.na(income)) %>%
select(gender,income) %>% group_by(gender)
#filter() : income이 결측치인 데이터를 제거
#select() : gender,income 컬럼만 따로 추출
#group_by() : gender를 기준으로 그룹화
#summari() : income의 평균 값을 그룹 연산
welfare_copy %>%
filter(!is.na(income)) %>%
select(gender,income) %>% group_by(gender) %>%
summarise(mean_income = mean(income))
#filter() : income이 결측치인 데이터를 제거
#select() : gender,income 컬럼만 따로 추출
#group_by() : gender를 기준으로 그룹화
#summari() : income의 평균 값을 그룹 연산
welfare_copy %>%
filter(!is.na(income)) %>%
select(gender,income) %>% group_by(gender) %>%
summarise(mean_income = mean(income))-> gender_data
ggplot(
data = gender_data,
aes(
x = gender,
y = income
)
) + geom_col()
ggplot(
data = gender_data,
aes(
x = gender,
y = mean_income
)
) + geom_col()
welfare_copy %>% mutate(age = 2015 - birth)
welfare_copy %>% mutate(age = 2015 - birth) -> welfare_copy
welfare_copy %>%  filter(!is.na(income)) %>%  select(age,income)
welfare_copy %>%  filter(!is.na(income)) %>%  select(age,income) %>%
group_by(age)
welfare_copy %>%  filter(!is.na(income)) %>%  select(age,income) %>%
group_by(age) %>%  summarise(mean_income = mean(income))
welfare_copy %>%  filter(!is.na(income)) %>%  select(age,income) %>%
group_by(age) %>%  summarise(mean_income = mean(income)) -> df2
ggplot(
data = df2,
aes(
x = age
)
) + geom_bar()
ggplot(
data = df2,
aes(
x = age,
y = mean_income
)
) + geom_bar()
ggplot(
data = df2,
aes(
x = age,
y = mean_income
)
) + geom_col()
df2 %>%  arrange(desc(mean_income))
print("건후 메롱")
welfare_copy
welfare_copy %>%  ifelse(age<40,'young',ifelse(age<60,'middle','old'))
welfare_copy %>%  ifelse(age<40,'young',ifelse(age<60,'middle','old'))
welfare_copy
welfare_copy %>%  ifelse(age<40,'young',ifelse(age<60,'middle','old'))
welfare_copy %>%  ifelse(age<40,'young','middle')
welfare_copy %>%  ifelse(age<40,'young','middle')
welfare_copy
ifelse(welfare_copy$age<40,'young',ifelse(welfare_copy$age<60,'middle','old'))
ifelse(welfare_copy$age<40,'young',ifelse(welfare_copy$age<60,'middle','old')) -> welfare_copy$ageg
welfare_copy %>%  select(aged,income)
welfare_copy %>%  select(ageg,income)
welfare_copy %>%  select(ageg,income) %>%  group_by(ageg)
welfare_copy %>%  select(ageg,income) %>% filter(!is.na(income))-> group_by(ageg)
welfare_copy %>%  select(ageg,income) %>% filter(!is.na(income))
welfare_copy %>%  select(ageg,income) %>% filter(!is.na(income)) %>% group_by(ageg)
welfare_copy %>%  select(ageg,income) %>% filter(!is.na(income)) %>% group_by(ageg) %>%
summarise(mean_income = mean(income)) -> df3
ggplot(
data = df3,
aes(
x = ageg,
y = mean_income
)
) + geom_col()
welfare_copy %>% mutate(ageg =  ifelse(age<40,'young',ifelse(age<60,'middle','old'))) %>%   select(ageg,income) %>% filter(!is.na(income)) %>% group_by(ageg) %>%
summarise(mean_income = mean(income))
welfare_copy %>% mutate(ageg =  ifelse(age<40,'young',ifelse(age<60,'middle','old'))) %>%   select(ageg,income) %>% filter(!is.na(income)) %>% group_by(ageg) %>%
summarise(mean_income = mean(income)) -> df3
ggplot(
data = df3,
aes(
x = ageg,
y = mean_income
)
) + geom_col()
welfare_copy %>% mutate(ageg =  ifelse(age<40,'young',ifelse(age<60,'middle','old'))) %>%   select(ageg,income) %>% filter(!is.na(income)) %>% group_by(ageg) %>%
summarise(mean_income = mean(income)) -> arrange(mean_income) -> df3
welfare_copy %>% mutate(ageg =  ifelse(age<40,'young',ifelse(age<60,'middle','old'))) %>%   select(ageg,income) %>% filter(!is.na(income)) %>% group_by(ageg) %>%
summarise(mean_income = mean(income)) -> arrange(mean_income) -> df3
welfare_copy %>% mutate(ageg =  ifelse(age<40,'young',ifelse(age<60,'middle','old'))) %>%   select(ageg,income) %>% filter(!is.na(income)) %>% group_by(ageg) %>%
summarise(mean_income = mean(income)) ->  df3
ggplot(
data = df3,
aes(
x = ageg,
y = mean_income
)
) + geom_col()
ggplot(
data = df3,
aes(
x = -ageg,
y = mean_income
)
) + geom_col()
ggplot(
data = df3,
aes(
x = ageg,
y = mean_income
)
) + geom_col()
ggplot(
data = df3,
aes(
x = c('young','middle','old'),
y = mean_income
)
) + geom_col()
ggplot(
data = df3,
aes(
x = ageg,
y = mean_income
)
) + geom_col()
ggplot(
data = df3,
aes(
x = c('young','middle','old'),
y = mean_income
)
) + geom_col()
ggplot(
data = df3,
aes(
x = ageg,
y = mean_income
)
) + geom_col()
ggplot(
data = df3,
aes(
x = c(young,middle,old),
y = mean_income
)
) + geom_col()
ggplot(
data = df3,
aes(
x = c('young','middle','old'),
y = mean_income
)
) + geom_col()
ggplot(
data = df3,
aes(
x = ageg,
y = mean_income
)
) + geom_col()
ggplot( #(x축의 순서를 커스텀)
data = df3,
aes(
x = ageg,
y = mean_income
)
) + geom_col() + scale_x_discrete(
limits = c("young",'middle','old')
)
## excel 파일을 로드 사용할 패키지를 설치
install.packages('readxl')
library(readxl)
read_excel("../Koweps/Koweps_Codebook.xlsx",sheet = 2)
read_excel("../Koweps/Koweps_Codebook.xlsx",sheet = 2)
read_excel("../Koweps/Koweps_Codebook.xlsx")
read_excel("C:/Users/geonh/OneDrive/바탕 화면/pbl기반 데이터분석/r_sql_python/Koweps/Koweps_Codebook.xlsx")
read_excel("../Koweps/Koweps_Codebook.xlsx",sheet = 2)
read_excel("../csv/Koweps_Codebook.xlsx",sheet = 2)
read_excel("../csv/Koweps_Codebook.xlsx",sheet = 2) -> code_book
left_join_data <- left_join(welfare_copy,code_book,by= 'code_job')
str(left_join_data)
inner_join_data <- inner_join(welfare_copy,code_book, by = 'code_job')
inner_join_data
str(inner_join_data)
welfare_copy %>%
filter(is.na(code_job) & !is.na(income))
welfare_copy %>%
filter(!is.na(code_job) & is.na(income))
left_join_data
##직업별 평균 임금이 높은 상위 5
left_join_data %>% filter(!is.na(income)) %>% select(job,income) %>%
group_by(job) %>%  summaries(mean_income = mean(income)) %>%  arrange(desc(mean_income)) %>%  head(5)
##직업별 평균 임금이 높은 상위 5
left_join_data %>% filter(!is.na(income)) %>% select(job,income) %>%
group_by(job) %>%  summarise(mean_income = mean(income)) %>%  arrange(desc(mean_income)) %>%  head(5)
## 남성을 기준으로
left_join_data %>% filter(!is.na(income) & gender == 'male') %>%
group_by(job) %>%  select(job,income) %>%  summarise(mean_incoe = mean(income)) %>%
arrange(desc(mean_income)) %>%  head(5)
## 남성을 기준으로
left_join_data %>% filter(!is.na(income) & gender == 'male') %>%
group_by(job) %>%  select(job,income) %>%  summarise(mean_income = mean(income)) %>%
arrange(desc(mean_income)) %>%  head(5)
## 여성을 기준으로
left_join_data %>% filter(!is.na(income) & gender == 'female') %>%
group_by(job) %>%  select(job,income) %>%  summarise(mean_income = mean(income)) %>%
arrange(desc(mean_income)) %>%  head(5)
left_join_data %>%
filter(gender == 'female' & !is.na(job)) %>%
select(job,income) %>%
group_by(job) %>%  summarise(mean_income = mean(income)) %>%
arrange(mean_income) %>%  head(5)
left_join_data %>%
filter(gender == 'female' & !is.na(job)) %>%
select(job,income) %>%
group_by(job) %>%  summarise(mean_income = mean(income)) %>%
arrange(-mean_income) %>%  head(5)
